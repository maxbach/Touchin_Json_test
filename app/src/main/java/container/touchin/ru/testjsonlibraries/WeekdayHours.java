/*
 * This code is autogenerated by Touch Instinct tools
 */
package container.touchin.ru.testjsonlibraries;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.util.ObjectsCompat;
import com.bluelinelabs.logansquare.annotation.JsonField;
import com.bluelinelabs.logansquare.annotation.JsonObject;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

/**
 * Часть расписания работы станции
 */
@JsonObject()
public class WeekdayHours {

    /**
     * День недели
     */
    @NonNull
    @JsonField(name = "weekDay")
    private Weekday weekDay;

    /**
     * Часы работы
     */
    @NonNull
    @JsonField(name = "workHour")
    private String workHour;

    public WeekdayHours() {
        super();
    }

    //TODO: if TItems instance of arrayList then new ArrayList
    public WeekdayHours(
            @NonNull final Weekday weekDay,
            @NonNull final String workHour
    ) {
        super();
        this.weekDay = weekDay;
        this.workHour = workHour;
    }


    /**
     * День недели
     */
    @NonNull
    public Weekday getWeekDay() {
        return this.weekDay;
    }

    /**
     * День недели
     */
    public void setWeekDay(@NonNull final Weekday weekDay) {
        this.weekDay = weekDay;
    }

    /**
     * Часы работы
     */
    @NonNull
    public String getWorkHour() {
        return this.workHour;
    }

    /**
     * Часы работы
     */
    public void setWorkHour(@NonNull final String workHour) {
        this.workHour = workHour;
    }

    protected void copyTo(@NonNull final WeekdayHours destination) {
        destination.weekDay = weekDay;
        destination.workHour = workHour;
    }

    @NonNull
    public WeekdayHours copy() {
        final WeekdayHours result = new WeekdayHours();
        this.copyTo(result);
        return result;
    }

    public int hashCode() {
        return ObjectsCompat.hash(weekDay, workHour);
    }

    public boolean equals(@Nullable final Object object) {
        if (this == object) {
            return true;
        }
        if (object == null || getClass() != object.getClass()) {
            return false;
        }
        final WeekdayHours that = (WeekdayHours) object;
        return ObjectsCompat.equals(this.weekDay, that.weekDay)
                && ObjectsCompat.equals(this.workHour, that.workHour);
    }

    private void writeObject(@NonNull final ObjectOutputStream outputStream) throws IOException {
        outputStream.writeObject(this.weekDay);
        outputStream.writeUTF(this.workHour);
    }

    @SuppressWarnings("unchecked")
    private void readObject(@NonNull final ObjectInputStream inputStream) throws IOException, ClassNotFoundException {
        this.weekDay = (Weekday) inputStream.readObject();
        this.workHour = inputStream.readUTF();
    }

}
