/*
 * This code is autogenerated by Touch Instinct tools
 */
package container.touchin.ru.testjsonlibraries;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.util.ObjectsCompat;
import com.bluelinelabs.logansquare.annotation.JsonField;
import com.bluelinelabs.logansquare.annotation.JsonObject;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Collections;
import java.util.List;

/**
 * Данные об АЗС
 */
@JsonObject
public class StationInfo extends BasePointGroupInfo {

    /**
     * Идентификатор
     */
    @NonNull
    @JsonField(name = "id")
    private String id;

    /**
     * Название
     */
    @NonNull
    @JsonField(name = "name")
    private String name;

    /**
     * Номер
     */
    @Nullable
    @JsonField(name = "number")
    private String number;

    /**
     * Идентификатор региона
     */
    @NonNull
    @JsonField(name = "regionId")
    private String regionId;

    /**
     * Виды топлива
     */
    @NonNull
    @JsonField(name = "fuelIds")
    private List<String> fuelIds;

    /**
     * Способы оплаты
     */
    @NonNull
    @JsonField(name = "paymentIds")
    private List<String> paymentIds;

    /**
     * Услуги
     */
    @NonNull
    @JsonField(name = "serviceIds")
    private List<String> serviceIds;

    /**
     * Свойства
     */
    @NonNull
    @JsonField(name = "propertyIds")
    private List<String> propertyIds;

    /**
     * Программы лояльности
     */
    @NonNull
    @JsonField(name = "loyaltyProgramIds")
    private List<String> loyaltyProgramIds;

    /**
     * Информация по картам «Рапида»
     */
    @NonNull
    @JsonField(name = "rapidaInfoIds")
    private List<String> rapidaInfoIds;

    /**
     * Информация по акциям
     */
    @NonNull
    @JsonField(name = "azsPromoIds")
    private List<String> azsPromoIds;

    /**
     * Информация по топливным картам
     */
    @NonNull
    @JsonField(name = "oilCardIds")
    private List<String> oilCardIds;

    public StationInfo() {
        super();
    }

    //TODO: if TItems instance of arrayList then new ArrayList
    public StationInfo(
            @NonNull final String id,
            @NonNull final String name,
            @NonNull final String regionId,
            @NonNull final List<String> fuelIds,
            @NonNull final List<String> paymentIds,
            @NonNull final List<String> serviceIds,
            @NonNull final List<String> propertyIds,
            @NonNull final List<String> loyaltyProgramIds,
            @NonNull final List<String> rapidaInfoIds,
            @NonNull final List<String> azsPromoIds,
            @NonNull final List<String> oilCardIds,
            @NonNull final String address,
            final double latitude,
            final double longitude,
            @Nullable final String number
    ) {
        super(address, latitude, longitude);
        this.id = id;
        this.name = name;
        this.number = number;
        this.regionId = regionId;
//        this.status = status;
        this.fuelIds = fuelIds;
        this.paymentIds = paymentIds;
        this.serviceIds = serviceIds;
        this.propertyIds = propertyIds;
//        this.workHours = workHours;
//        this.types = types;
        this.loyaltyProgramIds = loyaltyProgramIds;
        this.rapidaInfoIds = rapidaInfoIds;
        this.azsPromoIds = azsPromoIds;
        this.oilCardIds = oilCardIds;
    }


    /**
     * Идентификатор
     */
    @NonNull
    public String getId() {
        return this.id;
    }

    /**
     * Идентификатор
     */
    public void setId(@NonNull final String id) {
        this.id = id;
    }

    /**
     * Название
     */
    @NonNull
    public String getName() {
        return this.name;
    }

    /**
     * Название
     */
    public void setName(@NonNull final String name) {
        this.name = name;
    }

    /**
     * Номер
     */
    @Nullable
    public String getNumber() {
        if (this.number == null) {
            return null;
        }
        return this.number;
    }

    /**
     * Номер
     */
    public void setNumber(@Nullable final String number) {
        this.number = number;
    }

    /**
     * Идентификатор региона
     */
    @NonNull
    public String getRegionId() {
        return this.regionId;
    }

    /**
     * Идентификатор региона
     */
    public void setRegionId(@NonNull final String regionId) {
        this.regionId = regionId;
    }

//    /**
//     * Статус работы
//     */
//    @NonNull
//    public StationStatus getStatus() {
//        return this.status;
//    }
//
//    /**
//     * Статус работы
//     */
//    public void setStatus(@NonNull final StationStatus status) {
//        this.status = status;
//    }

    /**
     * Виды топлива
     */
    @NonNull
    public List<String> getFuelIds() {
        return Collections.unmodifiableList(this.fuelIds);
    }

    /**
     * Виды топлива
     */
    public void setFuelIds(@NonNull final List<String> fuelIds) {
        this.fuelIds = fuelIds;
    }

    /**
     * Способы оплаты
     */
    @NonNull
    public List<String> getPaymentIds() {
        return Collections.unmodifiableList(this.paymentIds);
    }

    /**
     * Способы оплаты
     */
    public void setPaymentIds(@NonNull final List<String> paymentIds) {
        this.paymentIds = paymentIds;
    }

    /**
     * Услуги
     */
    @NonNull
    public List<String> getServiceIds() {
        return Collections.unmodifiableList(this.serviceIds);
    }

    /**
     * Услуги
     */
    public void setServiceIds(@NonNull final List<String> serviceIds) {
        this.serviceIds = serviceIds;
    }

    /**
     * Свойства
     */
    @NonNull
    public List<String> getPropertyIds() {
        return Collections.unmodifiableList(this.propertyIds);
    }

    /**
     * Свойства
     */
    public void setPropertyIds(@NonNull final List<String> propertyIds) {
        this.propertyIds = propertyIds;
    }

//    /**
//     * Часы работы
//     */
//    @Nullable
//    public List<WeekdayHours> getWorkHours() {
//        if (this.workHours == null) {
//            return null;
//        }
//        return Collections.unmodifiableList(this.workHours);
//    }
//
//    /**
//     * Часы работы
//     */
//    public void setWorkHours(@Nullable final List<WeekdayHours> workHours) {
//        this.workHours = workHours;
//    }
//
//    /**
//     * Типы АЗС
//     */
//    @NonNull
//    public List<StationType> getTypes() {
//        return Collections.unmodifiableList(this.types);
//    }
//
//    /**
//     * Типы АЗС
//     */
//    public void setTypes(@NonNull final List<StationType> types) {
//        this.types = types;
//    }

    /**
     * Программы лояльности
     */
    @NonNull
    public List<String> getLoyaltyProgramIds() {
        return Collections.unmodifiableList(this.loyaltyProgramIds);
    }

    /**
     * Программы лояльности
     */
    public void setLoyaltyProgramIds(@NonNull final List<String> loyaltyProgramIds) {
        this.loyaltyProgramIds = loyaltyProgramIds;
    }

    /**
     * Информация по картам «Рапида»
     */
    @NonNull
    public List<String> getRapidaInfoIds() {
        return Collections.unmodifiableList(this.rapidaInfoIds);
    }

    /**
     * Информация по картам «Рапида»
     */
    public void setRapidaInfoIds(@NonNull final List<String> rapidaInfoIds) {
        this.rapidaInfoIds = rapidaInfoIds;
    }

    /**
     * Информация по акциям
     */
    @NonNull
    public List<String> getAzsPromoIds() {
        return Collections.unmodifiableList(this.azsPromoIds);
    }

    /**
     * Информация по акциям
     */
    public void setAzsPromoIds(@NonNull final List<String> azsPromoIds) {
        this.azsPromoIds = azsPromoIds;
    }

    /**
     * Информация по топливным картам
     */
    @NonNull
    public List<String> getOilCardIds() {
        return Collections.unmodifiableList(this.oilCardIds);
    }

    /**
     * Информация по топливным картам
     */
    public void setOilCardIds(@NonNull final List<String> oilCardIds) {
        this.oilCardIds = oilCardIds;
    }

    protected void copyTo(@NonNull final StationInfo destination) {
        super.copyTo(destination);
        destination.id = id;
        destination.name = name;
        destination.number = number;
        destination.regionId = regionId;
//        destination.status = status;
        destination.fuelIds = fuelIds;
        destination.paymentIds = paymentIds;
        destination.serviceIds = serviceIds;
        destination.propertyIds = propertyIds;
//        destination.workHours = workHours;
//        destination.types = types;
        destination.loyaltyProgramIds = loyaltyProgramIds;
        destination.rapidaInfoIds = rapidaInfoIds;
        destination.azsPromoIds = azsPromoIds;
        destination.oilCardIds = oilCardIds;
    }

    @NonNull
    public StationInfo copy() {
        final StationInfo result = new StationInfo();
        this.copyTo(result);
        return result;
    }

    public int hashCode() {
        return ObjectsCompat.hash(super.hashCode(), id, name, number, regionId,  fuelIds, paymentIds, serviceIds, propertyIds,   loyaltyProgramIds, rapidaInfoIds, azsPromoIds, oilCardIds);
    }

    public boolean equals(@Nullable final Object object) {
        if (this == object) {
            return true;
        }
        if (object == null || getClass() != object.getClass()) {
            return false;
        }
        final StationInfo that = (StationInfo) object;
        return super.equals(that)
                && ObjectsCompat.equals(this.id, that.id)
                && ObjectsCompat.equals(this.name, that.name)
                && ObjectsCompat.equals(this.number, that.number)
                && ObjectsCompat.equals(this.regionId, that.regionId)
//                && ObjectsCompat.equals(this.status, that.status)
                && ObjectsCompat.equals(this.fuelIds, that.fuelIds)
                && ObjectsCompat.equals(this.paymentIds, that.paymentIds)
                && ObjectsCompat.equals(this.serviceIds, that.serviceIds)
                && ObjectsCompat.equals(this.propertyIds, that.propertyIds)
//                && ObjectsCompat.equals(this.workHours, that.workHours)
//                && ObjectsCompat.equals(this.types, that.types)
                && ObjectsCompat.equals(this.loyaltyProgramIds, that.loyaltyProgramIds)
                && ObjectsCompat.equals(this.rapidaInfoIds, that.rapidaInfoIds)
                && ObjectsCompat.equals(this.azsPromoIds, that.azsPromoIds)
                && ObjectsCompat.equals(this.oilCardIds, that.oilCardIds);
    }

    private void writeObject(@NonNull final ObjectOutputStream outputStream) throws IOException {
        outputStream.writeUTF(this.id);
        outputStream.writeUTF(this.name);
        outputStream.writeObject(this.number);
        outputStream.writeUTF(this.regionId);
//        outputStream.writeObject(this.status);
        outputStream.writeObject(this.fuelIds);
        outputStream.writeObject(this.paymentIds);
        outputStream.writeObject(this.serviceIds);
        outputStream.writeObject(this.propertyIds);
//        outputStream.writeObject(this.workHours);
//        outputStream.writeObject(this.types);
        outputStream.writeObject(this.loyaltyProgramIds);
        outputStream.writeObject(this.rapidaInfoIds);
        outputStream.writeObject(this.azsPromoIds);
        outputStream.writeObject(this.oilCardIds);
    }

    @SuppressWarnings("unchecked")
    private void readObject(@NonNull final ObjectInputStream inputStream) throws IOException, ClassNotFoundException {
        this.id = inputStream.readUTF();
        this.name = inputStream.readUTF();
        this.number = (String) inputStream.readObject();
        this.regionId = inputStream.readUTF();
//        this.status = (StationStatus) inputStream.readObject();
        this.fuelIds = (List<String>) inputStream.readObject();
        this.paymentIds = (List<String>) inputStream.readObject();
        this.serviceIds = (List<String>) inputStream.readObject();
        this.propertyIds = (List<String>) inputStream.readObject();
//        this.workHours = (List<WeekdayHours>) inputStream.readObject();
//        this.types = (List<StationType>) inputStream.readObject();
        this.loyaltyProgramIds = (List<String>) inputStream.readObject();
        this.rapidaInfoIds = (List<String>) inputStream.readObject();
        this.azsPromoIds = (List<String>) inputStream.readObject();
        this.oilCardIds = (List<String>) inputStream.readObject();
    }

}
